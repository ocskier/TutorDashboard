{"version":3,"sources":["Components/Header/Header.jsx","Components/Table/Table.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","appBar","backgroundColor","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","alignItems","justifyContent","right","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","Table","students","useState","columns","render","rowData","FormControlLabel","control","Checkbox","checked","checkedState","fullName","onChange","handleCheckChange","name","label","cellStyle","textAlign","field","href","email","githubId","target","rel","zoomLink","data","state","setState","React","setCheckedState","isSendAvail","setIsSendAvail","useEffect","prevState","Object","entries","map","keyValArr","filter","checkedVal","length","event","addStudent","studentObj","splitDate","graduationDate","split","fetch","method","headers","body","JSON","stringify","parseInt","options","tableLayout","sorting","rowStyle","actionsColumnIndex","addRowPosition","components","actions","icon","tooltip","isFreeAction","disabled","onClick","alert","editable","onRowAdd","newData","a","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","createStyles","hide","visibility","show","tableWrapper","App","setStudents","time","setTime","error","setError","response","ok","json","date","Date","toLocaleString","studentsResRaw","studentsData","statusText","console","log","fetchAllData","style","flexWrap","student","numDate","$date","_id","$oid","getMonth","getDate","getFullYear","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d134ea6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    backgroundColor: 'grey'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n    display: \"inline-flex\",\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    // pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    right: '-10px'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.appBar} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Student Directory\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\n\r\nimport './Table.css';\r\n\r\nexport default function Table({students}) {\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      {\r\n        title: \"\",\r\n        render: (rowData) => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={checkedState[`checked-${rowData.fullName}`]}\r\n                onChange={handleCheckChange}\r\n                name={`checked-${rowData.fullName}`}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Primary\"\r\n          />\r\n        ),\r\n        cellStyle: {\r\n          textAlign: \"center\",\r\n        },\r\n      },\r\n      {\r\n        title: \"Code\",\r\n        field: \"classCode\",\r\n      },\r\n      { title: \"Name\", field: \"fullName\" },\r\n      {\r\n        title: \"Email\",\r\n        field: \"email\",\r\n        render: (rowData) => (\r\n          <a href={`mailto:${rowData.email}`}>{rowData.email}</a>\r\n        ),\r\n      },\r\n      {\r\n        title: \"GH\",\r\n        field: \"githubId\",\r\n        render: (rowData) => (\r\n          <a\r\n            href={`https://github.com/${rowData.githubId}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {rowData.githubId}\r\n          </a>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Grad Date\",\r\n        field: \"graduationDate\",\r\n      },\r\n      {\r\n        title: \"Sessions\",\r\n        field: \"sessionsWeek\",\r\n      },\r\n      {\r\n        title: \"Diff\",\r\n        field: \"timeDiff\",\r\n      },\r\n      {\r\n        title: \"Zoom\",\r\n        field: \"zoomLink\",\r\n        render: (rowData) => (\r\n          <a href={rowData.zoomLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {rowData.zoomLink}\r\n          </a>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Spot\",\r\n        field: \"startingPoint\",\r\n      },\r\n    ],\r\n    data: [],\r\n  });\r\n  const [checkedState, setCheckedState] = React.useState({});\r\n  const [isSendAvail, setIsSendAvail] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    setState(prevState=>{\r\n        return { ...prevState, data: students };\r\n    });\r\n  }, [students]);\r\n\r\n  useEffect(()=>{\r\n    let checkedArray = Object.entries(checkedState).map((keyValArr) =>\r\n      keyValArr[1]).filter((checkedVal) => checkedVal);\r\n      checkedArray.length > 0 ? setIsSendAvail(true) : setIsSendAvail(false);\r\n  },[checkedState]);\r\n\r\n  const handleCheckChange = (event) => {\r\n    setCheckedState(prevState=>{\r\n      return {\r\n        ...prevState, \r\n        [event.target.name]: event.target.checked \r\n      }\r\n    });\r\n  };\r\n\r\n  const addStudent = (studentObj) => {\r\n    const splitDate = studentObj.graduationDate.split('/');\r\n    return fetch(\"/api/students\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        ...studentObj,\r\n        graduationDate: [\r\n          parseInt(splitDate[2]),\r\n          parseInt(splitDate[0]),\r\n          parseInt(splitDate[1]),\r\n        ],\r\n      }),\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <MaterialTable\r\n        title=\"\"\r\n        columns={state.columns}\r\n        data={state.data}\r\n        options={{\r\n          tableLayout: \"auto\",\r\n          sorting: true,\r\n          rowStyle: {\r\n            backgroundColor: \"#EEE\",\r\n          },\r\n          actionsColumnIndex: -1,\r\n          addRowPosition: \"first\",\r\n        }}\r\n        components={{}}\r\n        actions={[\r\n          {\r\n            icon: () => <SendOutlinedIcon />,\r\n            tooltip: \"Send all emails\",\r\n            isFreeAction: true,\r\n            disabled: isSendAvail ? false : true,\r\n            onClick: (event) => alert(\"Sending all emails\"),\r\n          }\r\n        ]}\r\n        editable={{\r\n          onRowAdd: async (newData) => {\r\n            try {\r\n              const response = await addStudent(newData);\r\n            } catch (err) {\r\n              return;\r\n            }\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data.push(newData);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 600);\r\n            });\r\n          },\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                if (oldData) {\r\n                  setState((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data[data.indexOf(oldData)] = newData;\r\n                    return { ...prevState, data };\r\n                  });\r\n                }\r\n              }, 600);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 600);\r\n            }),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// const promiseHandler = useMemo((newData, oldData) => \r\n// new Promise(resolve => {\r\n//     setTimeout(() => {\r\n//       resolve();\r\n//       setState(prevState => {\r\n//         const data = [...prevState.data];\r\n//         data.push(newData);\r\n//         return { ...prevState, data };\r\n//       });\r\n//     }, 600);\r\n//   }),\r\n// )\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from 'clsx';\r\n\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Header from \"./Components/Header\";\r\nimport Table from \"./Components/Table\";\r\n\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    hide: {\r\n      visibility: \"hidden\",\r\n    },\r\n    show: {\r\n      visibility: \"visible\",\r\n    },\r\n    tableWrapper: { \r\n      width: '100%'\r\n    }\r\n  })\r\n);\r\n\r\nexport const App = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [time, setTime] = useState(null);\r\n  const [error, setError] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    async function fetchAllData() {\r\n      try {\r\n        const response = await fetch(\"/current-time\");\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const date = new Date();\r\n          date.setTime(data.time * 1000);\r\n          date.toLocaleString();\r\n          const studentsResRaw = await fetch(\"/api/students\");\r\n          const studentsData = await studentsResRaw.json();\r\n          setTime(date);\r\n          setStudents(studentsData);\r\n        } else {\r\n          setError(response.statusText);\r\n        }\r\n      } catch (err) {\r\n        console.log(err)\r\n        setError(true);\r\n      }\r\n    }\r\n    fetchAllData();\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      {!error ? (\r\n        <div className='main'>\r\n          <p className=\"pt-2 text-center text-success\">\r\n            {!time ? \"Loading...\" : `${time}`}\r\n          </p>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-around\", flexWrap: 'wrap' }}>\r\n            <div className={classes.tableWrapper}>\r\n              <Table students={students.map(student =>{\r\n                const numDate = new Date(student.graduationDate.$date);\r\n                return { \r\n                  ...student, \r\n                  _id: student._id.$oid, \r\n                  graduationDate: `${numDate.getMonth()+1}/${numDate.getDate()}/${numDate.getFullYear()}`\r\n                }\r\n              })} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p className=\"pt-2 text-center text-error\">{error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}