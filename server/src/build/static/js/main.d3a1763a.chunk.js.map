{"version":3,"sources":["Components/Header/Header.jsx","Components/Table/Table.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","appBar","backgroundColor","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","alignItems","justifyContent","right","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","Table","students","useState","columns","render","rowData","FormControlLabel","control","Checkbox","checked","checkedState","fullName","onChange","handleCheckChange","name","cellStyle","textAlign","field","href","email","githubId","target","zoomLink","data","state","setState","React","setCheckedState","isSendAvail","setIsSendAvail","useEffect","prevState","Object","entries","map","keyValArr","filter","checkedVal","length","event","addStudent","studentObj","splitDate","graduationDate","split","fetch","method","headers","body","JSON","stringify","parseInt","options","tableLayout","sorting","rowStyle","actionsColumnIndex","addRowPosition","components","actions","icon","tooltip","isFreeAction","disabled","onClick","alert","editable","onRowAdd","newData","a","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","createStyles","hide","visibility","show","App","setStudents","time","setTime","error","setError","response","ok","json","date","Date","toLocaleString","studentsResRaw","studentsData","statusText","console","log","fetchAllData","style","flexWrap","student","numDate","$date","_id","$oid","getMonth","getDate","getFullYear","ReactDOM","StrictMode","document","getElementById"],"mappings":"wYAMMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,gBAAiB,QAEnBC,WAAY,CACVC,YAAaN,EAAMO,QAAQ,IAE7BC,MAAM,aACJN,SAAU,EACVO,QAAS,QACRT,EAAMU,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,QAAM,GACJC,SAAU,WACVC,aAAcd,EAAMe,MAAMD,aAC1BV,gBAAiBY,YAAKhB,EAAMiB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTf,gBAAiBY,YAAKhB,EAAMiB,QAAQC,OAAOC,MAAO,MAEpDC,WAAY,EACZC,MAAO,QARH,cASHrB,EAAMU,YAAYC,GAAG,MAAQ,CAC5BS,WAAYpB,EAAMO,QAAQ,GAC1Bc,MAAO,SAXL,wBAaK,eAbL,GAeNC,WAAY,CACVC,QAASvB,EAAMO,QAAQ,EAAG,GAC1BiB,OAAQ,OACRX,SAAU,WAEVJ,QAAS,OACTgB,WAAY,SACZC,eAAgB,SAChBC,MAAO,SAETC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTP,QAASvB,EAAMO,QAAQ,EAAG,EAAG,EAAG,GAChCwB,YAAY,YACZC,WAAYhC,EAAMiC,YAAYC,OAAO,SACrCb,MAAO,QACNrB,EAAMU,YAAYC,GAAG,MAAQ,CAC5BU,MAAO,OACP,UAAW,CACTA,MAAO,cAMA,SAASc,IACtB,IAAMC,EAAUtC,IAEhB,OACE,yBAAKuC,UAAWD,EAAQnC,MACtB,kBAACqC,EAAA,EAAD,CAAQD,UAAWD,EAAQjC,OAAQU,SAAS,UAC1C,kBAAC0B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLJ,UAAWD,EAAQ/B,WACnBwB,MAAM,UACNa,aAAW,eAEX,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAYN,UAAWD,EAAQ5B,MAAOoC,QAAQ,KAAKC,QAAM,GAAzD,wB,0ECzEK,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,SAAW,EACdC,mBAAS,CACjCC,QAAS,CACP,CACEzC,MAAO,GACP0C,OAAQ,SAACC,GAAD,OACN,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,QAASC,EAAa,WAAD,OAAYL,EAAQM,WACzCC,SAAUC,EACVC,KAAI,kBAAaT,EAAQM,UACzB5B,MAAM,eAKdgC,UAAW,CACTC,UAAW,WAGf,CACEtD,MAAO,OACPuD,MAAO,aAET,CAAEvD,MAAO,OAAQuD,MAAO,YACxB,CACEvD,MAAO,QACPuD,MAAO,QACPb,OAAQ,SAACC,GAAD,OACN,uBAAGa,KAAI,iBAAYb,EAAQc,QAAUd,EAAQc,SAGjD,CACEzD,MAAO,KACPuD,MAAO,WACPb,OAAQ,SAACC,GAAD,OACN,uBAAGa,KAAI,6BAAwBb,EAAQe,UAAYC,OAAO,UACvDhB,EAAQe,YAIf,CACE1D,MAAO,YACPuD,MAAO,kBAET,CACEvD,MAAO,WACPuD,MAAO,gBAET,CACEvD,MAAO,OACPuD,MAAO,YAET,CACEvD,MAAO,OACPuD,MAAO,WACPb,OAAQ,SAACC,GAAD,OACN,uBAAGa,KAAMb,EAAQiB,SAAUD,OAAO,UAC/BhB,EAAQiB,YAIf,CACE5D,MAAO,OACPuD,MAAO,kBAGXM,KAAM,KApEgC,mBACjCC,EADiC,KAC1BC,EAD0B,OAsEAC,IAAMxB,SAAS,IAtEf,mBAsEjCQ,EAtEiC,KAsEnBiB,EAtEmB,OAuEFD,IAAMxB,UAAS,GAvEb,mBAuEjC0B,EAvEiC,KAuEpBC,EAvEoB,KAyExCC,qBAAU,WACRL,GAAS,SAAAM,GACL,OAAO,eAAKA,EAAZ,CAAuBR,KAAMtB,SAEhC,CAACA,IAEJ6B,qBAAU,WACWE,OAAOC,QAAQvB,GAAcwB,KAAI,SAACC,GAAD,OAClDA,EAAU,MAAIC,QAAO,SAACC,GAAD,OAAgBA,KACxBC,OAAS,EAAIT,GAAe,GAAQA,GAAe,KAClE,CAACnB,IAEH,IAAMG,EAAoB,SAAC0B,GACzBZ,GAAgB,SAAAI,GACd,OAAO,eACFA,EADL,eAEGQ,EAAMlB,OAAOP,KAAOyB,EAAMlB,OAAOZ,cAKlC+B,EAAa,SAACC,GAClB,IAAMC,EAAYD,EAAWE,eAAeC,MAAM,KAClD,OAAOC,MAAM,gBAAiB,CAC5BC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAL,eACDT,EADC,CAEJE,eAAgB,CACdQ,SAAST,EAAU,IACnBS,SAAST,EAAU,IACnBS,SAAST,EAAU,WAM3B,OACE,oCACE,kBAAC,IAAD,CACEhF,MAAM,GACNyC,QAASqB,EAAMrB,QACfoB,KAAMC,EAAMD,KACZ6B,QAAS,CACPC,YAAa,OACbC,SAAS,EACTC,SAAU,CACRjG,gBAAiB,QAEnBkG,oBAAqB,EACrBC,eAAgB,SAElBC,WAAY,GACZC,QAAS,CACP,CACEC,KAAM,kBAAM,kBAAC,IAAD,OACZC,QAAS,kBACTC,cAAc,EACdC,UAAUnC,EACVoC,QAAS,SAACzB,GAAD,OAAW0B,MAAM,yBAG9BC,SAAU,CACRC,SAAS,WAAD,4BAAE,WAAOC,GAAP,SAAAC,EAAA,+EAEiB7B,EAAW4B,GAF5B,8FAMR,IAAIE,SAAQ,SAACC,GACXC,YAAW,WACTD,IACA9C,GAAS,SAACM,GACR,IAAMR,EAAI,YAAOQ,EAAUR,MAE3B,OADAA,EAAKkD,KAAKL,GACH,eAAKrC,EAAZ,CAAuBR,cAExB,QAdG,yDAAF,mDAAC,GAiBTmD,YAAa,SAACN,EAASO,GAAV,OACX,IAAIL,SAAQ,SAACC,GACXC,YAAW,WACTD,IACII,GACFlD,GAAS,SAACM,GACR,IAAMR,EAAI,YAAOQ,EAAUR,MAE3B,OADAA,EAAKA,EAAKqD,QAAQD,IAAYP,EACvB,eAAKrC,EAAZ,CAAuBR,cAG1B,SAEPsD,YAAa,SAACF,GAAD,OACX,IAAIL,SAAQ,SAACC,GACXC,YAAW,WACTD,IACA9C,GAAS,SAACM,GACR,IAAMR,EAAI,YAAOQ,EAAUR,MAE3B,OADAA,EAAKuD,OAAOvD,EAAKqD,QAAQD,GAAU,GAC5B,eAAK5C,EAAZ,CAAuBR,cAExB,a,WC5KXvE,EAAYC,aAAW,SAACC,GAAD,OAC3B6H,YAAa,CACXC,KAAM,CACJC,WAAY,UAEdC,KAAM,CACJD,WAAY,gBAgEHE,EA3DI,WAAO,IAAD,EACSjF,mBAAS,IADlB,mBAChBD,EADgB,KACNmF,EADM,OAEClF,mBAAS,MAFV,mBAEhBmF,EAFgB,KAEVC,EAFU,OAGGpF,oBAAS,GAHZ,mBAGhBqF,EAHgB,KAGTC,EAHS,KAKPxI,IA0BhB,OAxBA8E,qBAAU,WAAM,4CACd,oCAAAuC,EAAA,+EAE2BxB,MAAM,iBAFjC,YAEU4C,EAFV,QAGiBC,GAHjB,iCAIyBD,EAASE,OAJlC,cAIYpE,EAJZ,QAKYqE,EAAO,IAAIC,MACZP,QAAoB,IAAZ/D,EAAK8D,MAClBO,EAAKE,iBAPX,UAQmCjD,MAAM,iBARzC,eAQYkD,EARZ,iBASiCA,EAAeJ,OAThD,QASYK,EATZ,OAUMV,EAAQM,GACRR,EAAYY,GAXlB,wBAaMR,EAASC,EAASQ,YAbxB,0DAgBIC,QAAQC,IAAR,MACAX,GAAS,GAjBb,2DADc,uBAAC,WAAD,wBAqBdY,KACC,IAGD,yBAAK7G,UAAU,OACb,kBAACF,EAAD,MACEkG,EAmBA,uBAAGhG,UAAU,+BAA+BgG,GAlB5C,yBAAKhG,UAAU,QACb,uBAAGA,UAAU,iCACT8F,EAAD,UAA0BA,GAAlB,cAEX,yBAAKgB,MAAO,CAAE1I,QAAS,OAAQiB,eAAgB,eAAgB0H,SAAU,SACvE,6BACE,kBAAC,EAAD,CAAOrG,SAAUA,EAASiC,KAAI,SAAAqE,GAC5B,IAAMC,EAAU,IAAIX,KAAKU,EAAQ5D,eAAe8D,OAChD,OAAO,eACFF,EADL,CAEEG,IAAKH,EAAQG,IAAIC,KACjBhE,eAAe,GAAD,OAAK6D,EAAQI,WAAW,EAAxB,YAA6BJ,EAAQK,UAArC,YAAkDL,EAAQM,2BC9D1FC,IAAS3G,OACP,kBAAC,IAAM4G,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d3a1763a.chunk.js","sourcesContent":["import React from 'react';\n\nimport { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: 'grey'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n    display: \"inline-flex\",\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    // pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: '-10px'\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Student Directory\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\n\nimport './Table.css';\n\nexport default function Table({students}) {\n  const [state, setState] = useState({\n    columns: [\n      {\n        title: \"\",\n        render: (rowData) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={checkedState[`checked-${rowData.fullName}`]}\n                onChange={handleCheckChange}\n                name={`checked-${rowData.fullName}`}\n                color=\"primary\"\n              />\n            }\n          />\n        ),\n        cellStyle: {\n          textAlign: \"center\",\n        },\n      },\n      {\n        title: \"Code\",\n        field: \"classCode\",\n      },\n      { title: \"Name\", field: \"fullName\" },\n      {\n        title: \"Email\",\n        field: \"email\",\n        render: (rowData) => (\n          <a href={`mailto:${rowData.email}`}>{rowData.email}</a>\n        ),\n      },\n      {\n        title: \"GH\",\n        field: \"githubId\",\n        render: (rowData) => (\n          <a href={`https://github.com/${rowData.githubId}`} target=\"_blank\">\n            {rowData.githubId}\n          </a>\n        ),\n      },\n      {\n        title: \"Grad Date\",\n        field: \"graduationDate\",\n      },\n      {\n        title: \"Sessions\",\n        field: \"sessionsWeek\",\n      },\n      {\n        title: \"Diff\",\n        field: \"timeDiff\",\n      },\n      {\n        title: \"Zoom\",\n        field: \"zoomLink\",\n        render: (rowData) => (\n          <a href={rowData.zoomLink} target=\"_blank\">\n            {rowData.zoomLink}\n          </a>\n        ),\n      },\n      {\n        title: \"Spot\",\n        field: \"startingPoint\",\n      },\n    ],\n    data: [],\n  });\n  const [checkedState, setCheckedState] = React.useState({});\n  const [isSendAvail, setIsSendAvail] = React.useState(false);\n\n  useEffect(() => {\n    setState(prevState=>{\n        return { ...prevState, data: students };\n    });\n  }, [students]);\n\n  useEffect(()=>{\n    let checkedArray = Object.entries(checkedState).map((keyValArr) =>\n      keyValArr[1]).filter((checkedVal) => checkedVal);\n      checkedArray.length > 0 ? setIsSendAvail(true) : setIsSendAvail(false);\n  },[checkedState]);\n\n  const handleCheckChange = (event) => {\n    setCheckedState(prevState=>{\n      return {\n        ...prevState, \n        [event.target.name]: event.target.checked \n      }\n    });\n  };\n\n  const addStudent = (studentObj) => {\n    const splitDate = studentObj.graduationDate.split('/');\n    return fetch(\"/api/students\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ...studentObj,\n        graduationDate: [\n          parseInt(splitDate[2]),\n          parseInt(splitDate[0]),\n          parseInt(splitDate[1]),\n        ],\n      }),\n    });\n  }\n  \n  return (\n    <>\n      <MaterialTable\n        title=\"\"\n        columns={state.columns}\n        data={state.data}\n        options={{\n          tableLayout: \"auto\",\n          sorting: true,\n          rowStyle: {\n            backgroundColor: \"#EEE\",\n          },\n          actionsColumnIndex: -1,\n          addRowPosition: \"first\",\n        }}\n        components={{}}\n        actions={[\n          {\n            icon: () => <SendOutlinedIcon />,\n            tooltip: \"Send all emails\",\n            isFreeAction: true,\n            disabled: isSendAvail ? false : true,\n            onClick: (event) => alert(\"Sending all emails\"),\n          }\n        ]}\n        editable={{\n          onRowAdd: async (newData) => {\n            try {\n              const response = await addStudent(newData);\n            } catch (err) {\n              return;\n            }\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data.push(newData);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            });\n          },\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  setState((prevState) => {\n                    const data = [...prevState.data];\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n        }}\n      />\n    </>\n  );\n}\n\n// const promiseHandler = useMemo((newData, oldData) => \n// new Promise(resolve => {\n//     setTimeout(() => {\n//       resolve();\n//       setState(prevState => {\n//         const data = [...prevState.data];\n//         data.push(newData);\n//         return { ...prevState, data };\n//       });\n//     }, 600);\n//   }),\n// )\n","import React, { useEffect, useState } from \"react\";\nimport clsx from 'clsx';\n\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport Header from \"./Components/Header\";\nimport Table from \"./Components/Table\";\n\nimport './App.css';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    hide: {\n      visibility: \"hidden\",\n    },\n    show: {\n      visibility: \"visible\",\n    },\n  })\n);\n\nexport const App = () => {\n  const [students, setStudents] = useState([]);\n  const [time, setTime] = useState(null);\n  const [error, setError] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    async function fetchAllData() {\n      try {\n        const response = await fetch(\"/current-time\");\n        if (response.ok) {\n          const data = await response.json();\n          const date = new Date();\n          date.setTime(data.time * 1000);\n          date.toLocaleString();\n          const studentsResRaw = await fetch(\"/api/students\");\n          const studentsData = await studentsResRaw.json();\n          setTime(date);\n          setStudents(studentsData);\n        } else {\n          setError(response.statusText);\n        }\n      } catch (err) {\n        console.log(err)\n        setError(true);\n      }\n    }\n    fetchAllData();\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      {!error ? (\n        <div className='main'>\n          <p className=\"pt-2 text-center text-success\">\n            {!time ? \"Loading...\" : `${time}`}\n          </p>\n          <div style={{ display: \"flex\", justifyContent: \"space-around\", flexWrap: 'wrap' }}>\n            <div>\n              <Table students={students.map(student =>{\n                const numDate = new Date(student.graduationDate.$date);\n                return { \n                  ...student, \n                  _id: student._id.$oid, \n                  graduationDate: `${numDate.getMonth()+1}/${numDate.getDate()}/${numDate.getFullYear()}`\n                }\n              })} />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <p className=\"pt-2 text-center text-error\">{error}</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}